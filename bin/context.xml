<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop = "http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/jdbc     
        http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
      
	<bean name="message" class="br.com.hellospring.impl.SucessMessage">
		<property name="nome" value="Sucesso"/>
	</bean>
	
	<bean name="emailSender" class="br.com.hellospring.impl.EmailSender">
		<property name="name" value="Fábio Santos Alves"/>
		<property name="emailAddress" value="fa3io.santos.alves@gmail.com"/>
	</bean>
	
	<bean name="emailMassege" class="br.com.hellospring.impl.EmailMessage">
		<property name="contents" value="Conhecendo cada vez mais o Spring Framework!"/>
		<property name="from" ref="emailSender"/>
	</bean>
	
	<bean name="clienteDAO" class="br.com.hellospring.impl.ClienteDAO">
	</bean>
	
	<!-- Configurando arquivo de propriedades no Spring
	<bean name="propertiesConfigurer" 
	class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:spring.properties</value>
		</property>
	</bean>
	-->
	
	<!-- Configurando arquivo de propriedades no Spring de forma mais simples precisa configurar   
		 xmlns:context="http://www.springframework.org/schema/context"
		 
		 xsi:schemaLocation="
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
	-->
	<context:property-placeholder location="classpath:spring.properties"/>
	
	
	<!-- Utilizando o arquivo de properties -->
	<bean name="conexaoMySql" class="br.com.hellospring.impl.ConexaoImpl">
		<property name="banco" value="${banco}"/>
		<property name="url" value="${url}"/>
		<property name="porta" value="${porta}"/>
		<property name="base" value="${base}"/>
		<property name="usuario" value="${usuario}"/>
		<property name="senha" value="${senha}"/>
	</bean>
	
	<bean name="conexaoOracle" class="br.com.hellospring.impl.ConexaoImpl">
		<property name="banco" value="Oracle"/>
		<property name="url" value="176.62.10.1"/>
		<property name="porta" value="9080"/>
		<property name="base" value="spring"/>
		<property name="usuario" value="oracle"/>
		<property name="senha" value="ora123"/>
	</bean>
	
	<bean name="messageResouce" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages"/>
	</bean>
	
	
	<!-- Configuração para anotações Ex:@Autowired  -->
	<context:annotation-config/>
	
	<!-- Configuração para Escanear pacotes Ex: @Component() -->
	<context:component-scan  base-package="br.com.hellospring.pojo" />

	
	
	
	<!-- Eventos dentro do Spring Framework -->
	
	<bean name="usuarioDaoImpl" class="br.com.hellospring.events.UsuarioDaoImpl"/>
	<bean name="UsuarioCreationListener" class="br.com.hellospring.events.UsuarioCreationListener"/>
	
	<!-- Fim dos Exemplos de Eventos -->
	
	
	
	
	<!-- Programacao Oriantada a Aspecto (AOP) dentro do Spring Framework -->
	
	<!-- xmlns:aop = "http://www.springframework.org/schema/aop" 
		 xsi:schemaLocation=" http://www.springframework.org/schema/aop" -->
	
	<aop:aspectj-autoproxy />
	<bean name="UsuarioService" class="br.com.hellospring.aop.UsuarioServiceImpl"/>
	<bean name="AdviceUsuarioAspect" class="br.com.hellospring.aop.AdviceUsuarioAspect"/>
	<bean name="PointcutAspect" class="br.com.hellospring.aop.PointcutAspect"/>
	<bean name="CompositePointcutAspect" class="br.com.hellospring.aop.CompositePointcutAspect"/>
	
	<!-- Fim dos Exemplos de Programacao Oriantada a Aspecto (AOP) -->
	
	
	
	<!-- Spring JDBC -->
	
	<!-- Carregando Banco de dados de memoria -->
	<jdbc:embedded-database id="dataSource" type="HSQL">
		<jdbc:script location="classpath:scripts/initDatabase.sql" />
		<jdbc:script location="classpath:scripts/chargeDatabase.sql" />
	</jdbc:embedded-database>
	
	<!-- Como carregar Banco de dados normal
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value=""/>
		<property name="url" value=""/>
		<property name="username" value=""/>
		<property name="password" value=""/>
	</bean>
	-->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="usuarioDao" class="br.com.hellospring.jdbc.JdbcTemplateUsuarioDaoImpl">
		<property name="jdbcTemplate" ref="jdbcTemplate"/>
	</bean>
	
	<!-- Fim Spring JDBC  -->
	
	
	
	
	<!-- Spring JPA -->
	
	<!-- Carregando Banco de dados de memoria -->
	<jdbc:embedded-database id="dataSourceJPA" type="HSQL">
		<jdbc:script location="classpath:scripts/initDatabase.sql" />
		<jdbc:script location="classpath:scripts/chargeDatabase.sql" />
	</jdbc:embedded-database>
	
	<bean name="entityManagerFactory" 
	class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSourceJPA"/>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="HSQL"/>
				<property name="showSql" value="true"/>
			</bean>
		</property>
	</bean>
	
	<bean name="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
	<tx:annotation-driven mode="proxy"/>	
	<context:annotation-config/>
		
	<bean name="customerDao" class="br.com.hellospring.jpa.JPACustomerDaoImpl">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
	<bean name="addressDao" class="br.com.hellospring.jpa.JPAAddressDaoImpl">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
	<bean name="customerService" class="br.com.hellospring.jpa.CustomerServiceImpl">
		<property name="customerDao" ref="customerDao"/>
		<property name="addressDao" ref="addressDao"/>
	</bean>
	
	
	<!-- Fim Spring JPA  -->
	
	
</beans>